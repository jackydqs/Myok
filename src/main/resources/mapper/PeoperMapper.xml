<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.oa.mapper.PeoperMapper">

    <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache">-->
    <cache type="com.zking.oa.redis.RedisCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>

    <resultMap id="BaseResultMap" type="com.zking.oa.model.Peoper">
        <constructor>
            <idArg column="sid" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="sname" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="age" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <resultMap id="row" type="com.zking.oa.model.Peoper">
        <id column="sid" property="sid" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="sname" property="sname" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="age" property="age" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    </resultMap>
    <sql id="Base_Column_List">
    sid, sname, age
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
<!-- useCache="false"禁用缓存 -->
        select
        <include refid="Base_Column_List"/>
        from mytest
        where sid = #{sid,jdbcType=INTEGER}
    </select>
    <select id="list" resultMap="row" parameterType="com.zking.oa.model.Peoper">
        SELECT *
        FROM mytest
        WHERE 1=1
        <if test="sname != null and ''!= sname">
            and sname LIKE concat('%',#{sname,jdbcType=VARCHAR},'%')
        </if>
        <if test="minage != null">
            and age &gt;= #{minage,jdbcType=INTEGER}
        </if>
        <if test="maxage != null">
            and age &lt;= #{maxage,jdbcType=INTEGER}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mytest
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
    <delete id="delall" parameterType="com.zking.oa.model.Peoper">
        delete from mytest
        where sid IN
        <foreach item="item" collection="sids" separator="," open="(" close=")" index="">
            #{item, jdbcType=INTEGER}
        </foreach>

    </delete>
    <insert id="insert" parameterType="com.zking.oa.model.Peoper" useGeneratedKeys="true" keyProperty="sid">
    insert into mytest (sname,age)
    values (#{sname,jdbcType=VARCHAR},#{age,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zking.oa.model.Peoper">
        insert into mytest
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="sname != null">
                sname,
            </if>
            <if test="age != null">
                age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="sname != null">
                #{sname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zking.oa.model.Peoper">
        update mytest
        <set>
            <if test="sname != null">
                sname = #{sname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
        </set>
        where sid = #{sid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zking.oa.model.Peoper">
    update mytest
    set sname = #{sname,jdbcType=VARCHAR},
    age = #{age,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=INTEGER}
  </update>
</mapper>